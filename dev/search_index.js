var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API Reference","title":"API Reference","text":"CurrentModule = BallroomSkatingSystem","category":"page"},{"location":"api/#API","page":"API Reference","title":"API","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [BallroomSkatingSystem]","category":"page"},{"location":"api/#BallroomSkatingSystem.calc_majority-Tuple{Any}","page":"API Reference","title":"BallroomSkatingSystem.calc_majority","text":"calc_majority(results)\n\nReturns the judge majority for a result DataFrame results.\n\n\n\n\n\n","category":"method"},{"location":"api/#BallroomSkatingSystem.get_places-Tuple{Any, Any}","page":"API Reference","title":"BallroomSkatingSystem.get_places","text":"get_places(dances, results_single_dances)\n\nCollects the skating results for a vector of dances and result DataFrames.\n\n\n\n\n\n","category":"method"},{"location":"api/#BallroomSkatingSystem.get_rule11_table-Tuple{Any}","page":"API Reference","title":"BallroomSkatingSystem.get_rule11_table","text":"get_rule11_table(results_single_dances)\n\nPrepares a DataFrame with all judgements concatenated into a single table for use when  applying Rule 11.\n\n\n\n\n\n","category":"method"},{"location":"api/#BallroomSkatingSystem.remove!-Tuple{Any, Any}","page":"API Reference","title":"BallroomSkatingSystem.remove!","text":"remove!(a, item)\n\nRemoves item from the collection a.\n\n\n\n\n\n","category":"method"},{"location":"api/#BallroomSkatingSystem.skating_combined-NTuple{4, Any}","page":"API Reference","title":"BallroomSkatingSystem.skating_combined","text":"skating_combined(dances, results_single_dances)\n\nCalculates the final placement of competitors in a dancing competition based on the skating rules. dances is a vector of strings, containing the names of the dances.  results_single_dances is a vector of DataFrames, containing the results for the individual dances. See skating_single_dance for the correct input format.\n\nOutputs a DataFrame with the accumulated skating tableau as strings, a vector containing  tableaus containing the application of Rule 10 and Rule 11, the skating results for the individual dances as well as a DataFrame with the starter numbers and final places.\n\n\n\n\n\n","category":"method"},{"location":"api/#BallroomSkatingSystem.skating_single_dance-Tuple{DataFrame, Int64}","page":"API Reference","title":"BallroomSkatingSystem.skating_single_dance","text":"skating_single_dance(results)\nskating_single_dance(results, majority_from; [initial_place, initial_column, depth])\n\nCalculates a skating tableau and placement for judgment results of a single dance contained in the DataFrame results. It must contain the starter numbers of the dancers as a first column named :Numbers, and the places assigned by the different judges in the following columns, for example as in\n\nDataFrame(Number = [11, 12, 13, 14, 15],\n        JudgeA = [1, 2, 3, 4, 5],\n        JudgeB = [1, 3, 2, 4, 5],\n        JudgeC = [1, 3, 2, 5, 4],\n        JudgeD = [5, 1, 2, 3, 4],\n        JudgeE = [2, 1, 5, 3, 4])\n\nReturns a DataFrame with the skating tableau represented as strings, as well as a DataFrame with the starter numbers and places.\n\nFor calculations on cropped tables, the majority of votes, the initial placement to fill, the initial column in the tableau where skating should start as well as the desired depth of the calculation can be defined by keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"examples/","page":"Examples","title":"Examples","text":"CurrentModule = BallroomSkatingSystem","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = BallroomSkatingSystem","category":"page"},{"location":"#BallroomSkatingSystem","page":"Home","title":"BallroomSkatingSystem","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BallroomSkatingSystem.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package implements the skating system of compiling scores in ballroom dance competitions. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Disclaimer\nThis package is currently a work in progress! It has not been tested against all corner cases that might emerge in real dancing tournaments. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: Note\nNo sanity checks are performed on the data, like ensuring the correct number of judges for every dance, or making sure that starter numbers coincide. Make sure to feed sanitized data to the functions.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"BallroomSkatingSystem.jl is not a registered package. To install, type ] at the Julia REPL to enter package mode, and type","category":"page"},{"location":"","page":"Home","title":"Home","text":"add https://github.com/sdobber/BallroomSkatingSystem.jl","category":"page"},{"location":"#Exported-Functions","page":"Home","title":"Exported Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"skating_single_dance\nskating_combined ","category":"page"},{"location":"#BallroomSkatingSystem.skating_single_dance","page":"Home","title":"BallroomSkatingSystem.skating_single_dance","text":"skating_single_dance(results)\nskating_single_dance(results, majority_from; [initial_place, initial_column, depth])\n\nCalculates a skating tableau and placement for judgment results of a single dance contained in the DataFrame results. It must contain the starter numbers of the dancers as a first column named :Numbers, and the places assigned by the different judges in the following columns, for example as in\n\nDataFrame(Number = [11, 12, 13, 14, 15],\n        JudgeA = [1, 2, 3, 4, 5],\n        JudgeB = [1, 3, 2, 4, 5],\n        JudgeC = [1, 3, 2, 5, 4],\n        JudgeD = [5, 1, 2, 3, 4],\n        JudgeE = [2, 1, 5, 3, 4])\n\nReturns a DataFrame with the skating tableau represented as strings, as well as a DataFrame with the starter numbers and places.\n\nFor calculations on cropped tables, the majority of votes, the initial placement to fill, the initial column in the tableau where skating should start as well as the desired depth of the calculation can be defined by keyword arguments.\n\n\n\n\n\n","category":"function"},{"location":"#BallroomSkatingSystem.skating_combined","page":"Home","title":"BallroomSkatingSystem.skating_combined","text":"skating_combined(dances, results_single_dances)\n\nCalculates the final placement of competitors in a dancing competition based on the skating rules. dances is a vector of strings, containing the names of the dances.  results_single_dances is a vector of DataFrames, containing the results for the individual dances. See skating_single_dance for the correct input format.\n\nOutputs a DataFrame with the accumulated skating tableau as strings, a vector containing  tableaus containing the application of Rule 10 and Rule 11, the skating results for the individual dances as well as a DataFrame with the starter numbers and final places.\n\n\n\n\n\n","category":"function"},{"location":"#More-Information","page":"Home","title":"More Information","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Wiki page for the Skating system\nWDSF pdf file of the rules (see also this page)\nDescription of the rules (in German)","category":"page"}]
}
